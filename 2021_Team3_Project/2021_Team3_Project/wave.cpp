//=============================================================================
//
// 上下運動のクラス	[wave.cpp]
// Author : Konishi Yuuto
//
//=============================================================================

//=============================================================================
// インクルード
//=============================================================================
#include "wave.h"

//=============================================================================
// コンストラクタ
//=============================================================================
CWave::CWave()
{
	m_fTime = 1.0f;
	m_fTimeNum = 0.0f;
	m_fPower = 0.0f;
	m_fHeight = 0.0f;
}

//=============================================================================
// デストラクタ
//=============================================================================
CWave::~CWave()
{
}

//=============================================================================
// インスタンス生成
//=============================================================================
CWave * CWave::Create(float fTimeNum, float fPower, float fHeight)
{
	// メモリ確保
	CWave *pWave = new CWave;

	// nullcheck
	if (pWave)
	{
		// 初期化処理
		pWave->Init(fTimeNum, fPower, fHeight);
	}

	return pWave;
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CWave::Init(float fTimeNum, float fPower, float fHeight)
{
	m_fTimeNum = fTimeNum;
	m_fPower = fPower;
	m_fHeight = fHeight;

	return S_OK;
}

//=============================================================================
// 更新処理
//=============================================================================
void CWave::Update(void)
{
	// 値を足す
	m_fTime += m_fTimeNum;
}

//=============================================================================
// 上下運動
//=============================================================================
float CWave::Wave(void)
{
	return sinf(D3DX_PI / (m_fHeight) * m_fTime)*m_fPower;
}

//=============================================================================
// 上下運動
//=============================================================================
float CWave::Wave(int nCntV, int nCntH)
{
	return sinf(D3DX_PI / (m_fHeight) * (m_fTime + nCntH + nCntV))*m_fPower;
}