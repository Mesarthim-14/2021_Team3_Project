//=============================================================================
// 魚雷 [torpedo.cpp]
// Author : Sugawara Tsukasa
//=============================================================================
//=============================================================================
// インクルードファイル
// Author : Sugawara Tsukasa
//=============================================================================
#include "manager.h"
#include "resource_manager.h"
#include "character.h"
#include "game.h"
#include "player.h"
#include "collision.h"
#include "torpedo.h"
#include "renderer.h"
#include "model_box.h"

//=============================================================================
// マクロ定義
// Author : Sugawara Tsukasa
//=============================================================================
#define SIZE			(D3DXVECTOR3(500.0f,800.0f,1000.0f))			// サイズ
#define ROT				(D3DXVECTOR3(rot.x,rot.y + m_fAngle,rot.z))	// 向き
#define MOVE_VALUE		(10.0f)										// 移動量
//=============================================================================
// コンストラクタ
// Author : Sugawara Tsukasa
//=============================================================================
CTorpedo::CTorpedo(PRIORITY Priority)
{
	m_fAngle = ZERO_FLOAT;
}
//=============================================================================
// インクルードファイル
// Author : Sugawara Tsukasa
//=============================================================================
CTorpedo::~CTorpedo()
{
}
//=============================================================================
// インクルードファイル
// Author : Sugawara Tsukasa
//=============================================================================
CTorpedo * CTorpedo::Create(D3DXVECTOR3 pos, D3DXVECTOR3 rot)
{
	// CTorpedoのポインタ
	CTorpedo *pTorpedo = nullptr;

	// nullcheck
	if (pTorpedo == nullptr)
	{
		// メモリ確保
		pTorpedo = new CTorpedo;

		// !nullcheck
		if (pTorpedo != nullptr)
		{
			// 初期化処理
			pTorpedo->Init(pos, rot);

			// 箱生成
			CModel_Box::Create(pos, rot, pTorpedo);
		}
	}
	// ポインタを返す
	return pTorpedo;
}
//=============================================================================
// 初期化処理関数
// Author : Sugawara Tsukasa
//=============================================================================
HRESULT CTorpedo::Init(D3DXVECTOR3 pos, D3DXVECTOR3 rot)
{
	// モデル情報取得
	CXfile *pXfile = CManager::GetResourceManager()->GetXfileClass();

	// !nullcheck
	if (pXfile != nullptr)
	{
		// モデル情報取得
		CXfile::MODEL model = pXfile->GetXfile(CXfile::XFILE_NUM_TORPEDO);
		 
		// モデルの情報を渡す
		BindModel(model);
	}

	// サイズ設定
	SetSize(SIZE);

	// 初期化処理
	CModel::Init(pos, ZeroVector3);

	// プレイヤーのポインタ取得
	CPlayer *pPlayer = GET_PLAYER_PTR;

	// nullcheck
	if (pPlayer != nullptr)
	{
		// 位置座標取得
		D3DXVECTOR3 PlayerPos = pPlayer->GetPos();

		// 角度
		m_fAngle = atan2f((pos.x - PlayerPos.x), (pos.z - PlayerPos.z));
	}

	// 向き
	SetRot(ROT);

	return S_OK;
}
//=============================================================================
// 終了処理関数
// Author : Sugawara Tsukasa
//=============================================================================
void CTorpedo::Uninit(void)
{
	// 終了処理
	CModel::Uninit();
}
//=============================================================================
// 更新処理関数
// Author : Sugawara Tsukasa
//=============================================================================
void CTorpedo::Update(void)
{
	// 更新処理
	CModel::Update();

	// 移動処理
	//Move();

	// 当たり判定
	//Collision();
}
//=============================================================================
// 描画処理関数
// Author : Sugawara Tsukasa
//=============================================================================
void CTorpedo::Draw(void)
{
	// 描画処理
	CModel::Draw();

}
//=============================================================================
// 移動処理関数
// Author : Sugawara Tsukasa
//=============================================================================
void CTorpedo::Move(void)
{
	// 移動量取得
	D3DXVECTOR3 move = GetMove();

	// 弾の移動
	move.x = -sinf(m_fAngle) *MOVE_VALUE;
	move.z = -cosf(m_fAngle) *MOVE_VALUE;

	// 移動設定
	SetMove(move);
}
//=============================================================================
// 当たり判定処理関数
// Author : Sugawara Tsukasa
//=============================================================================
void CTorpedo::Collision(void)
{
	// 船の位置取得
	D3DXVECTOR3 pos = GetPos();

	// サイズ取得
	D3DXVECTOR3 size = GetSize();

	// プレイヤーのポインタ取得
	CPlayer *pPlayer = GET_PLAYER_PTR;

	// プレイヤー位置座標取得
	D3DXVECTOR3 PlayerPos = pPlayer->GetPos();

	// プレイヤーサイズ取得
	D3DXVECTOR3 PlayerSize = pPlayer->GetSize();

	// 判定
	if (CCollision::CollisionRectangleAndRectangle(pos, PlayerPos, size, PlayerSize) == true)
	{
		// 状態設定
		SetState(STATE_DEAD);

		// 終了処理
		Uninit();
	}
}